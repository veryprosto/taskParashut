Алгоритм подразумевает что за один шаг робот проходит расстояние не больше размера рюкзака, и если робот находится на расстоянии
меньше 1 шага от рюкзака то он его может обнаружить(если дать ему такую команду).

Суть примерно в следующем - робот ходит в право и лево постепенно увеличивая расстояние между ним и своим рюкзаком. 
И при наличии энергии на бесконечную беготню он рано или поздно доберется до рюкзака другого робота. И будет ждать его пока он вернется назад, 
а он вернется если ему хватит на это энергии.

Проверка осуществляется только когда он выполнил до конца команду сделал все шаги одной команды. 
Сответственно он на своём рюкзаке не остановится и за чужой он не примет и не будет зря ждать.

s=0; //количество шагов d
a:
s++;
moveLeft(s);
if (startPoint()) goto b; //проверяем есть ли парашют под ногами и если есть то переходим к метке "b" 
s++;//инкрементируем количество шагов.
moveRight(s);
if (startPoint) goto b; 
else goto a;
b: waitOtherRobot(); //ввел доп команду

На сколько я понял нужен просто алгоритм на псевдо коде, если необходимо могу написать программу на Java с использованием потоков, случайных чисел, 
где прямая из задачи - целые числа например Integer. 
